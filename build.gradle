plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
}

base {
    archivesName = mod_id
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 21
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

jarJar.enable()

// Default run configurations.
// These can be tweaked, removed, or duplicated as needed.
runs {
    // applies to all the run configs below
    configureEach {
        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
        // workingDirectory project.file('run-data')

        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        name = "JEI"
        url 'https://maven.blamejared.com'
    }
    maven {
        name = "EMI"
        url = "https://maven.terraformersmc.com/"
    }
    flatDir {
        dir 'libs'
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    implementation "local.libs:productivelib-${lib_version}"
    implementation "local.libs:productivebees-${pb_version}"
    implementation "local.libs:treetap-${treetap_version}"

    jarJar(group: 'cy.jdkdigital.productivelib', name: 'productivelib', version: '[0.0.5,)') {
        transitive(false)
    }

    compileOnly "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"

    compileOnly "dev.emi:emi-neoforge:${emi_version}:api"
    runtimeOnly "dev.emi:emi-neoforge:${emi_version}"

//    implementation fg.deobf("curse.maven:emi-580555:5204261")
//
//    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
//    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
//
//    implementation fg.deobf("curse.maven:corail-woodcutter-331983:4637053")
//    implementation fg.deobf("curse.maven:selene-499980:5068161")
//    implementation fg.deobf("curse.maven:sawmill-964817:5306900")
//    implementation fg.deobf("curse.maven:bookshelf-228525:4668763")
//    implementation fg.deobf("curse.maven:botany-pots-353928:4703902")
//    implementation fg.deobf("curse.maven:botany-trees-411357:4694737")
//    implementation fg.deobf("curse.maven:cofh-core-69162:5374122")
//    implementation fg.deobf("curse.maven:thermal-foundation-222880:5374123")
//    implementation fg.deobf("curse.maven:thermal-expansion-69163:5372749")
//
//    implementation fg.deobf("curse.maven:jei-238222:5491340")
//    implementation fg.deobf("curse.maven:jade-324717:5072729")
//    implementation fg.deobf("curse.maven:the-one-probe-245211:4629624")
//    implementation fg.deobf("curse.maven:fast-leaf-decay-230976:4620069")
//
//    implementation fg.deobf("curse.maven:farmers-delight-398521:5051242")
//    implementation fg.deobf("curse.maven:epherolib-885449:4889101")
//    implementation fg.deobf("curse.maven:croptopia-415438:4997459")
//    implementation fg.deobf("curse.maven:pams-harvestcraft-2-food-core-372534:5020789")
//    implementation fg.deobf("curse.maven:pams-harvestcraft-2-crops-361385:4687624")
//    implementation fg.deobf("curse.maven:pams-harvestcraft-2-pams-harvestcraft-2-trees-365460:4625518")
//    implementation fg.deobf("curse.maven:pams-harvestcraft-2-food-extended-402231:4606448")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description,
            lib_version            : lib_version,
            pb_version             : pb_version,
            jei_version            : jei_version,
            emi_version            : emi_version,
            treetap_version        : treetap_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}